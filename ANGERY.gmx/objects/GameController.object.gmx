<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.p1Health = 10;
global.p2Health = 10;

global.p1Input[2] = 0;
global.p2Input[2] = 0;

global.p1ComdCt = -1;
global.p2ComdCt = -1;

// Original positions of player sprites
global.p1OriPosX = bear.x;
global.p1OriPosY = bear.y;
global.p2OriPosX = fox.x;
global.p2OriPosY = fox.y;

global.Bar1 = 0;
global.Bar2 = 0;

global.i = 0;
global.goReset = false;
global.stopAnim = false;
global.seconds2 = 1;


resetPlayers();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//decrease time
global.seconds -= 1/room_speed;
output[2] = 0; 

if(global.seconds &lt; 0.1) and (global.seconds &gt; 0)
{
    output = fight(global.p1Input, global.p2Input);
    global.p1Health = global.p1Health - myAlgo(output[1]);
    global.p2Health = global.p2Health - myAlgo(output[0]);
    
   
    if (isDead(global.p1Health) or isDead(global.p2Health))
    {    
        //trigger death animation and game over      
        room_goto(game_over);   
    } 
   
    global.seconds = 16;
    
}  

else if(global.p1ComdCt == 2 and global.p2ComdCt == 2 and global.p1_isMoving == false and global.p2_isMoving == false and global.stopAnim == false)
{

    
    if(global.i &gt; 2)
    {
      output = fight(global.p1Input, global.p2Input);
      global.p1Health = damage(global.p1Health, myAlgo(output[1]));
      global.p2Health = damage(global.p2Health, myAlgo(output[0]));
      global.i = 0;
      global.goReset = true;
    }
    
    if(global.p1Input[global.i] == 1)
    { 
      bear.sprite_index = bear_punch;
    }
    
    if(global.p1Input[global.i] == 2)
    {  
     bear.sprite_index = bear_kick;
    }
    
     if(global.p1Input[global.i] == 3)
    {
       bear.sprite_index = bear_smash;
    }
    
     if(global.p2Input[global.i] == 1)
   { 
      fox.sprite_index = fox_zap;
    }
    
    if(global.p2Input[global.i] == 2)
    {  
    fox.sprite_index = fox_kick;
    }
    
     if(global.p2Input[global.i] == 3)
    {
       fox.sprite_index = fox_uppercut;
    }
    

     global.seconds2 -= 1 / room_speed;
    
    if(global.seconds2 &lt; 0.1 and global.seconds2 &gt; 0){
      global.i += 1;
      global.seconds2 = 1;
    }
    
   
    
   if (isDead(global.p1Health) or isDead(global.p2Health))
    {
        //trigger death animation and game over
        room_goto(game_over); 
    }
    
   else
   {
     if(global.goReset == true)
     {
     global.stopAnim = true;
     bear.sprite_index = bear_staticR;
     fox.sprite_index = foxStaticLeft;
     resetPlayers();
     global.stopAnim = false;
      }
   }
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite2_VIDA_HIT,1,view_xview[0], view_yview[0]);
draw_sprite_ext(sprite0_VIDA_10,1,view_xview[0], view_yview[0],global.p1Health/10,1,0,c_white,1); //global.p1Health/10
draw_sprite(sprite2_VIDA_HIT,1,view_xview[0]+645, view_yview[0]);
draw_sprite_ext(sprite0_VIDA_10,1,view_xview[0]+1023, view_yview[0],-global.p2Health/10,1,0,c_white,1); //global.p2Health/10

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
